Docker 常用命令

1.查看 docker 的版本
	docker version
    docker --version    // docker 软件的版本

2.查看 docker 的信息
    docker info

3.查看镜像列表。image：镜像，类似ISO。
    docker images
    docker images ls

4.查看正在运行的容器
    docker ps

5.查看所有容器
    docker ps -a

6.查看容器列表
    docker container ls
    docker container ls --all
    docker container ls -aq

7.从 Docker Hub 上拉取镜像到本地
    docker pull mongo           // 拉取 mongo db 最新版的镜像到本地
    docker pull mongo:3.6.18    // 拉取 mongo db 的 3.6.18 版本的镜像到本地

8.删除镜像
    docker rmi 7a               // 使用 IMAGE ID 删除镜像。注意：当没有重复的情况下，可以简写
    docker rmi mongo            // 使用 REPOSITORY（镜像名称） 删除镜像。注意：这里必须使用全称
    docker rmi mongo:3.6.18     // 使用 REPOSITORY + TAG（版本号） 删除镜像

9.运行名为 hello-world 的 docker 镜像，如果本地没有这个镜像，则从 Docker Hub 上下载后运行
    docker run hello-world
    docker run -it --rm -p 8000:80 -v /data/app --name aspnetcore_sample mcr.microsoft.com/dotnet/core/samples:aspnetapp
    docker run -it --rm -p 8000:80 -v ${PWD}:/data/app --workdir "/data/app" -v /host_mnt/d/projects/docker/myvol:/data/app --name aspnetcore_sample mcr.microsoft.com/dotnet/core/samples:aspnetapp

    docker run 参数说明：
        -it                                                 容器运行后自动进入容器的 bash 进行交互
        -d                                                  分离模式，使容器运行在后台（与 -it 应该不能同时执行）
        --rm                                                容器运行后自动删除这个容器
        -p 8000:80                                          映射端口：在外部通过8000端口访问容器内的80端口
        -v /data/app                                        创建卷（Volume），容器中的路径为 /data/app
        -v ${PWD}:/data/app                                 创建卷（Volume），容器中的路径为 /data/app，容器外（安装 docker 的 Linux 系统或虚拟机）对应的路径为${PWD}
        ${PWD}                                              Windows 系统获取命令提示符当前所在的路径
        --workdir "/data/app"                               工作目录所在的路径，可以理解为源代码所在的目录
        -v /host_mnt/d/projects/docker/myvol:/data/app      创建了第二个卷（Volume），将程序的输入放到数组系统中，如容器中的程序在卷（Volume）中创建了文件
        --name aspnetcore_sample                            设置启动容器的名称为：aspnetcore_sample
        mcr.microsoft.com.dotnet/core/samples:aspnetapp     运行的镜像名称

10.查看卷（Volume）的定义
    docker inspect ef9                          // ef9 为容器的 ID

    执行结果说明：
        Mounts.Source                                       docker 中世纪存储卷（Volume）的位置
        Mounts.Destination                                  用户设置的容器内容的卷的路径

11.运行一个容器
    docker start hello-world        // 通过 名称 运行容器
    docker start 87                 // 通过 ID 运行容器

12.停止运行容器。注意：停止后，容器中的数据和状态保持不变
    docker stop hello-world         // 通过 名称 停止容器
    docker stop 87                  // 通过 ID 停止容器
    docker stop 87 26 d4            // 停止 ID 为 87、26 和 d4 的容器
    docker stop $(docker ps -aq)    // 停止所有运行的容器(在 cmd 中无法使用这个命令)，-a：返回所有容器；q：只返回容器的ID；$(docker ps -aq)：返回所有容器 ID 的列表
    ctrl + c                        // 快捷键：停止容器中的应用，同时停止运行的容器
    ctrl + p, ctrl + q              // 停止容器中的应用，同时保持容器的运行（先按快捷键 crtl + p，再按快捷键 ctrl + q）

13.删除停止的容器
    docker rm hello-world

14.进入正在运行容器的 bash 与之交互
    docker exec -it 87 /bin/bash

15.退出容器的 bash
    exec                                    在 Windows 系统中退出 bash 模式
    ctrl + p + q


Swarm 操作（集群操作）：

16.建立一个管理节点虚拟机（Linux版）
    sudo docker swarm init --advertise-addr 192.168.1.100:2377 --listen-addr 192.168.1.100:2377
    
    docker swarm init 参数说明：
        sudo                                                在 Linux 中启用管理员权限运行命令
        --advertise-addr 192.168.1.100:2377                 无论服务器中有多少个 IP 地址，始终使用 192.168.1.100:2377 作为 docker swarm 相关应用
        --listen-addr 192.168.1.100:2377                    需要监听的 IP 地址
    注：IP 地址最好使用内网 IP 地址

17.获取要加入本机管理节点的 docker 命令和 Token
    docker swarm join-token manager

18.获取要加入本机工人节点的 docker 命令和 Token
    docker swarm join-token worker

19.使用以下命令可以查看本机的 swarm 状态
    docker info

20.将本机算计加入作为管理节点或工人节点加入到 swarm
    docker swarm join --token SWMKIT-1-33fc8cufhj3cadr...5a7sq 10.0.0.4:2377 --advertise-addr 192.168.1.101:2377 --listen-addr 192.168.1.101:2377

    参数说明：
        --token SWMKIT-1-33fc8cufhj3cadr...5a7sq            token 的值，直接复制 docker swarm join-token manager 命令的结果即可
        10.0.0.4:2377                                       要加入 swarm 节点主机的 IP 和端口，直接复制 docker swarm join-token manager 命令的结果即可
        --advertise-addr 192.168.1.101:2377                 （本地机）无论服务器中有多少个 IP 地址，始终使用 192.168.1.100:2377 作为 docker swarm 相关应用
        --listen-addr 192.168.1.101:2377                    （本地机）需要监听的 IP 地址

21.查看 swarm 节点信息。注意：只能在 manager 节点运行此命令，worker 节点没有权限运行该命令
    docker node ls

22.将工人节点升级为管理节点。注：只能在管理节点的计算机上运行此命令
    docker node promote hv7jm4gwnkh...865y

    参数说明：
        hv7jm4gwnkh...865y                                  运行 docker node ls 找到的，要提升为管理节点的工人节点 ID

23.从 swarm 节点退出
    docker swarm leave --force


Service 操作：
 
24.建立 service
    docker service create --name ServiceName -p 8000:80 -replicas 5 microsoft/dotnet-samples:aspnetapp
    docker service create --name ServiceName --network NetWorkName -p 8000:80 -replicas 5 datagridsys/sample-vote:1.0

    参数说明：
        -replicas 5                                         运行 5 个复制容器
        --network NetWorkName                               overlay network 名称

25.扩展 service 的节点数量到 10 个
    docker service update --replicas 10 microsoft/dotnet-samples:aspnetapp
    docker service scale ServiceName=10

26.删除 service
    docker service rm ServiceName

27.查看运行中的 service 列表
    docker service ls

28.查看运行的所有 service 的详细列表
    docker service ps ServiceName
    docker service ps ServiceName ｜ grep :2.0

    参数说明：
        ServiceName                                          必填，运行 service 的名称
        grep :2.0                                            只查看 2.0 版本的镜像

29.查看 service 的详细信息
    docker service inspect ServiceName

    参数说明：
        ServiceName                                          必填，运行 service 的名称

30.更新 service
    docker service update --image datagridsys/sample-vote:2.0 --update-parallelism 2 --update-delay 10s ServiceName

    参数说明：
        --image datagridsys/sample-vote:2.0                     镜像更新的名称和版本
        --update-parallelism 2                                  每次更新 service 的数量
        --update-delay 10s                                      更新的间隔

31.建立 overlay network
    docker network create -d overlay my-net                 my-net：名称

32.查看建立的 overlay network
    docker network ls


STACK 操作

33.建立 yml 文件
    mkdir mystack                                           建立一个名为 mystack 的文件夹
    cd mystack                                              进入这个文件夹
    vim docker-compose.yml                                  建立文件 docker-compose.yml
    之后在文件中♏️ stack 的基本配置并保存

34.部署 stack
    docker stack deploy -c docker-compose.yml StackName

35.查看 stack 的详细信息
    docker stack ls

36.查看指定 stack 中的 service 信息
    docker stack services StackName

37.查看指定 stack 中的镜像？信息
    docker stack ps StackName

38.访问服务器中的 8080 端口可以以视图洁面查看
    如浏览器访问：http://192.168.1.100:8080
